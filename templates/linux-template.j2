apiVersion: v1
kind: Template
metadata:
  name: {{ vm_name }}-template
  namespace: openshift
  annotations:
    description: "OCP Linux VM template"
    tags: "kubevirt,ocp,template,linux,virtualmachine"
    iconClass: icon-other-linux
  labels:
    kubevirt.io/os: linux
    miq.github.io/kubevirt-is-vm-template: "true"
    import-vm-apb/transaction_id: "{{ _apb_service_instance_id }}"

objects:
- apiVersion: kubevirt.io/v1alpha2
  kind: VirtualMachine
  metadata:
    name: ${NAME}
  spec:
    running: false
    template:
      spec:
        metadata:
          labels:
            kubevirt.io/domain: ${NAME}
        domain:
          cpu:
            cores: ${{'{{'}}CPU_CORES{{'}}'}}
          resources:
            requests:
              memory: ${MEMORY}
          machine:
            type: q35
          devices:
            disks:
              - name: disk0
                disk:
                  bus: {{ disk_bus }}
                volumeName: volume-1
        volumes:
          - name: volume-1
            persistentVolumeClaim:
              claimName: vm-${NAME}-disk-01
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: vm-${NAME}-disk-01
    annotations:
      k8s.io/CloneRequest: {{ namespace }}/{{ pvc_name }}
  spec:
{% if storage_class is defined %}
    storageClassName: {{ storage_class }}
{% endif %}
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: {{ disk_size_bytes }}
parameters:
- name: NAME
  description: Name for the new VM
- name: MEMORY
  description: Amount of memory
  value: {{ mem }}{{ mem_unit }}
- name: CPU_CORES
  description: Amount of cores
  value: "{{ nr_cores }}"
